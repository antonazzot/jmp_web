apiVersion: v1
kind: Namespace
metadata:
  name: epam-jmp
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: jmp-db-config-map
  namespace: epam-jmp
data:
  POSTGRES_DB : jmpdb
  URL : jdbc:postgresql://host.docker.internal:5432/jmpdb
---

apiVersion: v1
kind: Secret
metadata:
  name: jmp-db-secret
  namespace: epam-jmp
data:
  POSTGRES_USER : cG9zdGdyZXM=
  POSTGRES_PASSWORD : cG9zdGdyZXM=
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jmp-pv-claim # name of PVC essential for identifying the storage data
  namespace: epam-jmp
  labels:
    app: jmpdb
    tier: database
spec:
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi    #This will tell kubernetes about the amount of space we are trying to claim.
---

# Configure 'Deployment' of  server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jmpdb
  namespace: epam-jmp
  labels:
    app: jmpdb
    tier: database
spec:
  selector: # psql Pod Should contain same labels
    matchLabels:
      app: jmpdb
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: jmpdb
        tier: database
    spec:
      containers:
        - image: epamantontsyrkunou/jmpdb # image from docker
          name: jmpdb
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: jmp-db-secret
                  key: POSTGRES_USER

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jmp-db-secret
                  key: POSTGRES_PASSWORD

            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: jmp-db-config-map
                  key: POSTGRES_DB
          ports:
            - containerPort: 5437
              name: jmpdb
          volumeMounts: # Mounting voulume obtained from Persistent Volume Claim
            - name: jmpdb-pv-claim
              mountPath: /var/lib/psql #This is the path in the container on which the mounting will take place.
      volumes:
        - name: jmpdb-pv-claim # Obtaining 'volume' from PVC
          persistentVolumeClaim:
            claimName: jmpdb-pv-claim
---

apiVersion: v1
kind: Service
metadata:
  name: jmpdb
  namespace: epam-jmp
  labels:
    app: jmpdb
    tier: database
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: jmpdb
    tier: database
  clusterIP: None
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jmp-deployment
  namespace: epam-jmp
spec:
  selector:
    matchLabels:
      app: jmp
  replicas: 2
  template:
    metadata:
      labels:
        app: jmp
    spec:
      containers:
        - name: jmp
          image: epamantontsyrkunou/jmp-1.0.0
          ports:
            - containerPort: 8989
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jmp-db-secret
                  key: POSTGRES_PASSWORD

            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: jmp-db-secret
                  key: POSTGRES_USER

            - name: URL
              valueFrom:
                configMapKeyRef:
                  name: jmp-db-config-map
                  key: URL
---

apiVersion: v1
kind: Service
metadata:
  name: jmp-svc
  namespace: epam-jmp
spec:
  selector:
    app: jmp
  ports:
    - port: 8282 # The port that the service is running on in the cluster
      targetPort: 8989 # The port exposed by the service
      nodePort: 31520
  type: NodePort
---

apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
  name: nginx-example
  namespace: epam-jmp
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: k8s.io/ingress-nginx
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minimal-ingress
  namespace: epam-jmp
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
#  ingressClassName: nginx-example
  rules:
    - http:
        paths:
          - path: /jmp/?(.*)
            pathType: Prefix
            backend:
              service:
                name: userservice-svc
                port:
                  number: 8282
